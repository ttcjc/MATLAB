run preamble;

caseID = '20deg';

load(['~/MATLAB/Testing/Dispersed Phase Processing/LagDataPlaneRawFS_', caseID, '.mat']);

LagData = orderfields(LagData, [4,1,2,3]);

planes = fieldnames(LagData);

%%

for i = 1:height(planes)
    LagData.(planes{i}).d = double(cell2mat(LagData.(planes{i}).d));
    LagData.(planes{i}).nParticle = double(cell2mat(LagData.(planes{i}).nParticle));
    LagData.(planes{i}).Up = double(cell2mat(LagData.(planes{i}).Up));
    
    LagData.(planes{i}).d32 = (sum(LagData.(planes{i}).nParticle .* LagData.(planes{i}).d.^3) / ...
                               sum(LagData.(planes{i}).nParticle .* LagData.(planes{i}).d.^2)) * 1e6;
end
clear i;


%%

sizeDist.injector = [
                     2.000000e-05, 2.096012e-02
                     2.200000e-05, 2.818050e-02
                     2.400000e-05, 3.481311e-02
                     2.600000e-05, 4.172202e-02
                     2.800000e-05, 4.905249e-02
                     3.000000e-05, 5.607544e-02
                     3.200000e-05, 6.370273e-02
                     3.400000e-05, 7.175625e-02
                     3.600000e-05, 8.163851e-02
                     3.800000e-05, 9.092039e-02
                     4.000000e-05, 9.892324e-02
                     4.200000e-05, 1.065923e-01
                     4.400000e-05, 1.144396e-01
                     4.600000e-05, 1.236192e-01
                     4.800000e-05, 1.339745e-01
                     5.000000e-05, 1.441616e-01
                     5.200000e-05, 1.537851e-01
                     5.400000e-05, 1.626578e-01
                     5.600000e-05, 1.717315e-01
                     5.800000e-05, 1.809506e-01
                     6.000000e-05, 1.904429e-01
                     6.200000e-05, 2.008016e-01
                     6.400000e-05, 2.129377e-01
                     6.600000e-05, 2.265461e-01
                     6.800000e-05, 2.397581e-01
                     7.000000e-05, 2.514058e-01
                     7.200000e-05, 2.609726e-01
                     7.400000e-05, 2.713349e-01
                     7.600000e-05, 2.825004e-01
                     7.800000e-05, 2.951202e-01
                     8.000000e-05, 3.080875e-01
                     8.200000e-05, 3.216713e-01
                     8.400000e-05, 3.361234e-01
                     8.600000e-05, 3.509801e-01
                     8.800000e-05, 3.661870e-01
                     9.000000e-05, 3.790440e-01
                     9.200000e-05, 3.917476e-01
                     9.400000e-05, 4.054806e-01
                     9.600000e-05, 4.177813e-01
                     9.800000e-05, 4.307339e-01
                     1.000000e-04, 4.446496e-01
                     1.020000e-04, 4.603957e-01
                     1.040000e-04, 4.765911e-01
                     1.060000e-04, 4.929338e-01
                     1.080000e-04, 5.071413e-01
                     1.100000e-04, 5.221025e-01
                     1.120000e-04, 5.348278e-01
                     1.140000e-04, 5.471080e-01
                     1.160000e-04, 5.608990e-01
                     1.180000e-04, 6.031064e-01
                     1.200000e-04, 6.152307e-01
                     1.220000e-04, 6.270474e-01
                     1.240000e-04, 6.370168e-01
                     1.260000e-04, 6.474886e-01
                     1.280000e-04, 6.592006e-01
                     1.300000e-04, 6.711651e-01
                     1.320000e-04, 6.834158e-01
                     1.340000e-04, 6.981084e-01
                     1.360000e-04, 7.135692e-01
                     1.380000e-04, 7.291488e-01
                     1.400000e-04, 7.449111e-01
                     1.420000e-04, 7.625202e-01
                     1.440000e-04, 7.793896e-01
                     1.460000e-04, 7.953223e-01
                     1.480000e-04, 8.112550e-01
                     1.500000e-04, 8.252460e-01
                     1.520000e-04, 8.366713e-01
                     1.540000e-04, 8.480483e-01
                     1.560000e-04, 8.592373e-01
                     1.580000e-04, 8.696179e-01
                     1.600000e-04, 8.799920e-01
                     1.620000e-04, 8.903610e-01
                     1.640000e-04, 9.002167e-01
                     1.660000e-04, 9.100254e-01
                     1.680000e-04, 9.215460e-01
                     1.700000e-04, 9.345896e-01
                     1.720000e-04, 9.499842e-01
                     1.740000e-04, 9.594535e-01
                     1.760000e-04, 9.682729e-01
                     1.780000e-04, 9.762312e-01
                     1.800000e-04, 9.847218e-01
                     1.820000e-04, 9.933115e-01
                     1.840000e-04, 1.001728e+00
                     1.860000e-04, 1.007158e+00
                     1.880000e-04, 1.012589e+00
                     1.900000e-04, 1.018019e+00
                     1.920000e-04, 1.020996e+00
                     1.940000e-04, 1.022874e+00
                     1.960000e-04, 1.024753e+00
                     1.980000e-04, 1.026631e+00
                     2.000000e-04, 1.028509e+00
                     2.020000e-04, 1.027090e+00
                     2.040000e-04, 1.024040e+00
                     2.060000e-04, 1.020991e+00
                     2.080000e-04, 1.017942e+00
                     2.100000e-04, 1.014341e+00
                     2.120000e-04, 1.009051e+00
                     2.140000e-04, 1.003762e+00
                     2.160000e-04, 9.993950e-01
                     2.180000e-04, 9.960857e-01
                     2.200000e-04, 9.927764e-01
                     2.220000e-04, 9.894672e-01
                     2.240000e-04, 9.868168e-01
                     2.260000e-04, 9.848350e-01
                     2.280000e-04, 9.828531e-01
                     2.300000e-04, 9.808713e-01
                     2.320000e-04, 9.788894e-01
                     2.340000e-04, 9.769076e-01
                     2.360000e-04, 9.740211e-01
                     2.380000e-04, 9.694448e-01
                     2.400000e-04, 9.648686e-01
                     2.420000e-04, 9.602923e-01
                     2.440000e-04, 9.494736e-01
                     2.460000e-04, 9.342739e-01
                     2.480000e-04, 9.135352e-01
                     2.500000e-04, 8.873530e-01
                     2.520000e-04, 8.692745e-01
                     2.540000e-04, 8.371657e-01
                     2.560000e-04, 8.066896e-01
                     2.580000e-04, 7.840288e-01
                     2.600000e-04, 7.585384e-01
                     2.620000e-04, 7.298171e-01
                     2.640000e-04, 7.010907e-01
                     2.660000e-04, 6.732743e-01
                     2.680000e-04, 6.550871e-01
                     2.700000e-04, 6.418954e-01
                     2.720000e-04, 6.269864e-01
                     2.740000e-04, 6.170491e-01
                     2.760000e-04, 6.076514e-01
                     2.780000e-04, 5.991933e-01
                     2.800000e-04, 5.908815e-01
                     2.820000e-04, 5.836775e-01
                     2.840000e-04, 5.769536e-01
                     2.860000e-04, 5.696206e-01
                     2.880000e-04, 5.608636e-01
                     2.900000e-04, 5.521067e-01
                     2.920000e-04, 5.433497e-01
                     2.940000e-04, 5.345927e-01
                     2.960000e-04, 5.258357e-01
                     2.980000e-04, 5.170787e-01
                     3.000000e-04, 4.970092e-01
                     3.020000e-04, 4.876543e-01
                     3.040000e-04, 4.782995e-01
                     3.060000e-04, 4.689446e-01
                     3.080000e-04, 4.573021e-01
                     3.100000e-04, 4.446270e-01
                     3.120000e-04, 4.303511e-01
                     3.140000e-04, 4.160752e-01
                     3.160000e-04, 4.017992e-01
                     3.180000e-04, 3.875233e-01
                     3.200000e-04, 3.748307e-01
                     3.220000e-04, 3.639440e-01
                     3.240000e-04, 3.524255e-01
                     3.260000e-04, 3.407772e-01
                     3.280000e-04, 3.291938e-01
                     3.300000e-04, 3.124169e-01
                     3.320000e-04, 2.972044e-01
                     3.340000e-04, 2.867675e-01
                     3.360000e-04, 2.728316e-01
                     3.380000e-04, 2.591985e-01
                     3.400000e-04, 2.518718e-01
                     3.420000e-04, 2.407663e-01
                     3.440000e-04, 2.241503e-01
                     3.460000e-04, 2.075343e-01
                     3.480000e-04, 1.909183e-01
                     3.500000e-04, 1.768177e-01
                     3.520000e-04, 1.643423e-01
                     3.540000e-04, 1.538420e-01
                     3.560000e-04, 1.436005e-01
                     3.580000e-04, 1.340866e-01
                     3.600000e-04, 1.260308e-01
                     3.620000e-04, 1.210619e-01
                     3.640000e-04, 1.160930e-01
                     3.660000e-04, 1.111241e-01
                     3.680000e-04, 1.062062e-01
                     3.700000e-04, 1.037081e-01
                     3.720000e-04, 1.012101e-01
                     3.740000e-04, 9.871200e-02
                     3.760000e-04, 9.621394e-02
                     3.780000e-04, 9.371589e-02
                     3.800000e-04, 9.121783e-02
                     3.820000e-04, 8.871977e-02
                     3.840000e-04, 8.622171e-02
                     3.860000e-04, 8.372366e-02
                     3.880000e-04, 8.169724e-02
                     3.900000e-04, 8.123687e-02
                     3.920000e-04, 8.077650e-02
                     3.940000e-04, 8.031612e-02
                     3.960000e-04, 7.985575e-02
                     3.980000e-04, 7.939538e-02
                     4.000000e-04, 7.893500e-02
                    ];

sizeDist.injector = single(sizeDist.injector);

                
%% Mass-Weighted

for i = 1:height(planes)
    sizeDist.(planes{i}) = [sizeDist.injector(:,1), zeros([height(sizeDist.injector), 1])];
    
    mass = LagData.(planes{i}).nParticle .* (1000 * ((1 / 12) * tau * LagData.(planes{i}).d.^3));
    
    dBinned = interp1(sizeDist.injector(:,1), sizeDist.injector(:,1), LagData.(planes{i}).d, 'nearest');
    
    for j = 1:height(sizeDist.injector)
        index = find(dBinned == sizeDist.injector(j,1));
        
        if ~isempty(index)
            sizeDist.(planes{i})(j,2) = sum(mass(index)) / sum(mass);
        end
        
    end
    clear j;
    
%     sizeDist.(planes{i})((sizeDist.(planes{i})(:,2) == 0),2) = NaN;
    
    % Initialise Figure
    if i == 1
        fig = fig + 1;
        figName = ['Particle_Size_Distribution_Mass_', caseID];
        set(figure(fig), 'name', figName, 'color', [1, 1, 1], ...
                     'units', 'pixels', 'outerPosition', [50, 50, 795, 880]);
        pause(0.5);
        hold on;
        set(gca, 'positionConstraint', 'outerPosition', 'plotBoxAspectRatio', [1, 0.75, 0.75], ...
                 'lineWidth', 4, 'fontName', 'LM Mono 12', 'fontSize', 22, 'layer', 'top');
    
    % Plot Injector Size Distribution
    plot((sizeDist.injector(:,1) * 1e6), sizeDist.injector(:,2), ...
         'color', graphColours(1), 'lineWidth', 2);
    end
    
    % Plot Planar Distributions
    plot((sizeDist.(planes{i})(:,1) * 1e6), (sizeDist.(planes{i})(:,2) * 100), ...
        'color', graphColours(i + 1), 'lineWidth', 2);
    
    % Format Figure
    if i == height(planes)
        title('{-----}', 'interpreter', 'latex');
        subtitle('{ }');
        axis on;
        box on;
        grid off;
        xlim([0; 420]);
        ylim([0; 1.2]);
        tickData = (84:84:336);
        xticks(tickData);
        tickData = (0.2:0.2:1);
        yticks(tickData);
        xtickformat('%.0f');
        ytickformat('%.1f');
        xlabel({'{$D_{_{p}}$}'; '{-----}'}, 'interpreter', 'latex');
        ylabel({'{-----}'; 'Mass-Weighted Population (\%)'}, 'interpreter', 'latex');
        legend({'Injector', ...
                '$1\,\ell$', ...
                '$2\,\ell$', ...
                '$3\,\ell$', ...
                '$4\,\ell$'}, 'location', 'northEast', 'orientation', 'vertical', 'interpreter', 'latex', ...
               'fontSize', 18, 'box', 'off');
        tightInset = get(gca, 'TightInset');
        set(gca, 'innerPosition', [(tightInset(1) + 0.00625), ...
                                   (tightInset(2) + 0.00625), ...
                                   (1 - (tightInset(1) + tightInset(3) + 0.0125)), ...
                                   (1 - (tightInset(2) + tightInset(4) + 0.0125))]);
        pause(0.5);
        hold off;

        % Save Figure
        print(gcf, [userpath, '/Output/Figures/', figName, '.png'], '-dpng', '-r300');
    end
end
clear i;